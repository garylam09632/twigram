{"version":3,"sources":["components/auth/Logout.js","components/Navbar.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/Login.js","components/auth/SignUp.js","components/Welcome.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Logout","onLogoutBtnClick","event","window","confirm","document","getElementById","setAttribute","preventDefault","this","props","loggedIn","id","href","className","onClick","Component","Navbar","isLoggedIn","FormErrors","formerrors","cognito","message","validateForm","state","hasBlankField","isValidPassword","pwIsMatch","hasOwnProperty","username","errorMsg","email","password","hasUpperCase","RegExp","hasLowerCase","hasNumber","length","setCustomValidity","test","confirmPassword","form","blankField","passwordmatch","validPassword","Login","errors","blankfield","clearErrorState","setState","handleSubmit","a","error","Validate","Auth","signIn","user","login","history","push","pathname","console","log","onInputChange","target","value","onSubmit","noValidate","width","height","viewBox","fill","xmlns","fillRule","d","type","placeholder","onChange","required","SignUp","signUp","attributes","signUpResponse","data-html","data-toggle","title","Welcome","Home","undefined","location","alert","controls","name","src","App","loggedInUser","includes","exact","path","render","component","Boolean","hostname","match","Amplify","configure","mandatorySignId","region","config","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.137daa4a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Logout extends Component {\r\n\r\n    onLogoutBtnClick = event => {\r\n        if (window.confirm(\"Are you sure to logout?\")) {\r\n            document.getElementById('#nav-logout-btn').setAttribute('style', 'display:none')\r\n        }\r\n        else {\r\n            event.preventDefault()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loggedIn) { \r\n            return <a id=\"nav-logout-btn\" href=\"/login\" className=\"btn btn-warning text-white my-2 my-sm-0\" onClick={this.onLogoutBtnClick}>Logout</a> \r\n        }\r\n        else { return <div /> }\r\n    }\r\n}\r\n\r\nexport default Logout","import React, { Component } from 'react'\r\nimport Logout from './auth/Logout'\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <a id=\"title\" className=\"navbar-brand\">Video Streaming Services Demo</a>\r\n            <form className=\"form-inline\">\r\n                <a id=\"nav-signup-btn\" href=\"/signup\" className=\"btn bg-info my-2 my-sm-0 text-white\">Sign Up</a>\r\n                <a id=\"nav-login-btn\" href=\"/login\" className=\"btn btn-success  my-2 my-sm-0\">Login</a>\r\n                <Logout loggedIn={this.props.isLoggedIn} />\r\n            </form>\r\n        </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\n\r\nfunction FormErrors(props) {\r\n  if (props.formerrors && props.formerrors.cognito) {\r\n    return (\r\n      <div className=\"text-danger\">\r\n\t\t  { props.formerrors.cognito.message }\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default FormErrors;","function validateForm(event, state) {\r\n    var hasBlankField = false;\r\n    var isValidPassword = true;\r\n    var pwIsMatch = true;\r\n    if (state.hasOwnProperty(\"username\") && state.username === \"\") {\r\n        state.errorMsg.username = \"Please provide username\"\r\n        hasBlankField = true;\r\n    }\r\n    if (state.hasOwnProperty(\"email\") && state.email === \"\") {\r\n        state.errorMsg.email = \"Please provide email\"\r\n        hasBlankField = true;\r\n    }\r\n    if (state.hasOwnProperty(\"password\") && state.password === \"\") {\r\n        state.errorMsg.password = \"Please provide password\"\r\n        hasBlankField = true;\r\n    }\r\n    else {\r\n        // Password must satisfy several constraints\r\n        var hasUpperCase = new RegExp(\"[A-Z]+\")\r\n        var hasLowerCase = new RegExp(\"[a-z]+\")\r\n        var hasNumber = new RegExp(\"[0-9]+\")\r\n        \r\n        // 1) Minimum 8 characters\r\n        if (state.password.length < 8) {\r\n            document.getElementById(\"password\").setCustomValidity('Password not long enough');\r\n            state.errorMsg.password = \"Password requires minimum 8 characters\"\r\n            isValidPassword = false \r\n        }\r\n        // 2) Must contains uppercase and lowercase character\r\n        else if (!hasUpperCase.test(state.password) || !hasLowerCase.test(state.password)) { \r\n            document.getElementById(\"password\").setCustomValidity('Password should contain uppercase and lowercase character');\r\n            state.errorMsg.password = \"Password requires at least one uppercase or lowercase character\"        \r\n            isValidPassword = false \r\n        }\r\n        // 3) Must contains number\r\n        else if (!hasNumber.test(state.password)) {\r\n            document.getElementById(\"password\").setCustomValidity('Password must contain number');\r\n            state.errorMsg.password = \"Password must contains number\"\r\n            isValidPassword = false\r\n        }\r\n        else {\r\n            document.getElementById(\"password\").setCustomValidity('');\r\n        }\r\n    }\r\n    if (state.hasOwnProperty(\"password\") && state.hasOwnProperty(\"confirmPassword\")) {\r\n        if (state.password === state.confirmPassword) { \r\n            if (state.confirmPassword === \"\" || !isValidPassword) {\r\n                hasBlankField = true;\r\n                pwIsMatch = false;\r\n                document.getElementById(\"confirmPassword\").setCustomValidity('Invalid password');\r\n            }\r\n            else { document.getElementById(\"confirmPassword\").setCustomValidity(''); }\r\n        }\r\n        else {\r\n            document.getElementById(\"confirmPassword\").setCustomValidity('Password not same');\r\n            state.errorMsg.confirmPassword = \"Must be the same with the above password\";\r\n            pwIsMatch = false;\r\n        }\r\n    }\r\n    if (state.form === \"signup\") { \r\n        return { \r\n            blankField: hasBlankField, \r\n            passwordmatch: pwIsMatch, \r\n            validPassword: isValidPassword \r\n        } \r\n    }\r\n    else { return { blankField: hasBlankField } }\r\n}\r\n\r\nexport default validateForm;","import React, { Component } from 'react';\r\nimport FormErrors from \"../FormErrors\";\r\nimport Validate from \"../utility/FormValidation\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nclass Login extends Component {\r\n\r\n\tstate = {\r\n\t\tform: \"login\",\r\n\t\t// This username can also be email\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t\terrorMsg: {\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\"\r\n\t\t},\r\n\t\terrors: {\r\n\t\t\tcognito: null,\r\n\t\t\tblankfield: false\r\n\t\t},\r\n\t}\r\n\r\n\tclearErrorState = () => {\r\n\t\tdocument.getElementById(\"username\").setCustomValidity('');\r\n\t\tdocument.getElementById(\"password\").setCustomValidity('');\r\n\t\tthis.setState({\r\n\t\t    errors: {\r\n\t\t\t\tcognito: null,\r\n\t\t\t\tblankfield: false\r\n\t\t  \t}\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\r\n\t\t// Form validation\r\n\t\tthis.clearErrorState();\r\n\t\tconst error = Validate(event, this.state);\r\n\t\tif (error) {\r\n\t\t  \tthis.setState({\r\n\t\t\t\terrors: { ...this.state.errors, ...error }\r\n\t\t  \t});\r\n\t\t}\r\n\t\r\n\t\t// AWS Cognito integration here\r\n\t\tconst username = this.state.username, password = this.state.password;\r\n        try {\r\n\t\t\tconst user = await Auth.signIn(username, password);\r\n\r\n\t\t\t// Set the App state to logged in\r\n\t\t\tthis.props.login(user.username);\r\n\r\n\t\t\t// Redirect to home page\r\n\t\t\tthis.props.history.push({\r\n\t\t\t\tpathname: \"/home\",\r\n\t\t\t\tstate: {\r\n\t\t\t\t\tusername: user.username\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconsole.log(user)\r\n        } catch (error) {\r\n            // Didn't use the cognito error message as it is not detail enough\r\n            let err = null;\r\n\t\t\t!error.message ? err = { \"message\": error } : err = error;\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    cognito: error\r\n                }\r\n\t\t\t})\r\n\t\t\tif (error.message == \"Incorrect username or password.\") {\r\n\t\t\t\tdocument.getElementById(\"username\").setCustomValidity('Incorrect username or password');\r\n\t\t\t\tdocument.getElementById(\"password\").setCustomValidity('Incorrect username or password');\r\n\t\t\t}\r\n        }\r\n\t};\r\n\r\n\tonInputChange = event => {\r\n\t\tthis.setState({\r\n\t\t  \t[event.target.id]: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-2\"></div>\r\n\t\t\t\t\t<div className=\"col-md-10 content-col\">\r\n\t\t\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t\t\t<FormErrors formerrors={this.state.errors} />\r\n\t\t\t\t\t\t<div id=\"content-area\" className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<form id=\"form\" className=\"needs-validation\" onSubmit={this.handleSubmit} noValidate>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"input-group mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-group-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* User icon */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            \t\t\t<path fillRule=\"evenodd\" d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n                                        \t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"username\" className=\"form-control\" placeholder=\"Username or Email\" onChange={this.onInputChange} required />\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"valid-feedback\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ this.state.errorMsg.username }\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"input-group mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-group-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Key icon */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-key\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path fillRule=\"evenodd\" d=\"M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8zm4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5z\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.onInputChange} required />\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"valid-feedback\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ this.state.errorMsg.password }\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<a id=\"forgot-password\" href=\"#\"> Forgot password?</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<button id=\"login-btn\" type=\"submit\" className=\"btn btn-success\">Login</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-2\"></div>\r\n\t\t\t\t</div>\r\n        \t</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react';\r\nimport FormErrors from \"../FormErrors\";\r\nimport Validate from \"../utility/FormValidation\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        form: \"signup\",\r\n        username: \"\",\r\n\t\temail: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n\t\terrorMsg: {\r\n            username: \"\",\r\n\t\t\temail: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n\t\t},\r\n\t\terrors: {\r\n\t\t\tcognito: null,\r\n            blankfield: false,\r\n            validPassword: false,\r\n            passwordmatch: false\r\n\t\t},\r\n\t}\r\n\r\n    clearErrorState = () => {\r\n        document.getElementById(\"username\").setCustomValidity('');\r\n\t\tthis.setState({\r\n\t\t    errors: {\r\n\t\t\t\tcognito: null,\r\n                blankfield: false,\r\n                validPassword: false,\r\n                passwordmatch: false\r\n\t\t  \t}\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\r\n\t\t// Form validation\r\n\t\tthis.clearErrorState();\r\n\t\tconst error = Validate(event, this.state);\r\n\t\tif (error) {\r\n\t\t  \tawait this.setState({  \r\n\t\t\t\terrors: { ...this.state.errors, ...error }\r\n            });\r\n            if (this.state.errors.blankfield || !this.state.errors.validPassword || !this.state.errors.passwordmatch) { \r\n                console.log(\"ERR\")\r\n            }\r\n\t\t}\r\n\r\n        // AWS Cognito integration here\r\n        const { username, email, password } = this.state;\r\n        try {\r\n            const signUpResponse = await Auth.signUp({\r\n                username,\r\n                password,\r\n                attributes: {\r\n                    email\r\n                }\r\n            })\r\n            console.log(signUpResponse);\r\n            this.props.history.push(\"/welcome\");\r\n        } catch (error) {\r\n            error.message = \"User already exists\"\r\n            // Didn't use the cognito error message as it is not detail enough\r\n            let err = null;\r\n            !error.message ? err = { \"message\": error } : err = error;\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    cognito: error\r\n                }\r\n            })\r\n            console.log(error)\r\n            if (error.message == \"User already exists\") {\r\n\t\t\t\tdocument.getElementById(\"username\").setCustomValidity('User already exists');\r\n\t\t\t}\r\n        }\r\n\t};\r\n\r\n\tonInputChange = event => {\r\n\t\tthis.setState({\r\n\t\t  \t[event.target.id]: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-10 content-col\">\r\n                    <h1>Sign Up</h1>\r\n                    <FormErrors formerrors={this.state.errors} />\r\n                    <div id=\"content-area\" className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <form id=\"form\" className=\"needs-validation\" onSubmit={this.handleSubmit}  noValidate>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        {/* User icon */}\r\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n                                        </svg>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"text\" id=\"username\" className=\"form-control\" placeholder=\"Username\" onChange={this.onInputChange} required />\r\n                                <div className=\"valid-feedback\"></div>\r\n                                <div className=\"invalid-feedback\">\r\n                                    { this.state.errorMsg.username }\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        {/* Email icon */}\r\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-envelope\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383l-4.758 2.855L15 11.114v-5.73zm-.034 6.878L9.271 8.82 8 9.583 6.728 8.82l-5.694 3.44A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.739zM1 11.114l4.758-2.876L1 5.383v5.73z\"/>\r\n                                        </svg>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"text\" id=\"email\" className=\"form-control\" placeholder=\"Email\" onChange={this.onInputChange} required />\r\n                                <div className=\"valid-feedback\"></div>\r\n                                <div className=\"invalid-feedback\">\r\n                                    { this.state.errorMsg.email }\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        {/* Key icon */}\r\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-key\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8zm4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5z\"/>\r\n                                            <path d=\"M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n                                        </svg>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"password\" id=\"password\" className=\"form-control\" data-html=\"true\"\r\n                                        placeholder=\"Password (Hover to see constraints)\" onChange={this.onInputChange} \r\n                                        data-toggle=\"tooltip\" title=\"Password constraints:<br />\r\n                                               1) Minimum of 8 characters<br />\r\n                                               2) At least one uppercase and lowercase character<br />\r\n                                               3) Must contains number\" required />\r\n                                <div className=\"valid-feedback\"></div>\r\n                                <div className=\"invalid-feedback\">\r\n                                    { this.state.errorMsg.password }\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-2\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">\r\n                                        {/* Key icon */}\r\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-key\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fillRule=\"evenodd\" d=\"M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8zm4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5z\"/>\r\n                                            <path d=\"M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n                                        </svg>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"password\" id=\"confirmPassword\" className=\"form-control\" placeholder=\"Confirm password\" onChange={this.onInputChange} required />\r\n                                <div className=\"valid-feedback\"></div>\r\n                                <div className=\"invalid-feedback\">\r\n                                    { this.state.errorMsg.confirmPassword }\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button id=\"signin-btn\" type=\"submit\" className=\"btn btn-success\">Sign up</button>\r\n                            </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp","import React from 'react';\r\n\r\nexport default function Welcome() {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\"></div>\r\n\t\t\t    <div className=\"col-md-10 content-col\">\r\n                    <div className=\"container-fluid\">\r\n                        <h1>Welcome!</h1>\r\n                        <br />\r\n                        <p>You have successfully registered a new account.</p>\r\n                        <p>We've sent a confirmation link to your email. Please verify your account and then you are ready to login :)</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n            </div>\r\n        </div>\r\n      )\r\n}","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        username: \"\"\r\n    }\r\n  \r\n    componentDidMount() {\r\n        \r\n        if (this.props.location.state == undefined) {\r\n            alert(\"Invalid attempt. Login is required to view the request content.\");\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        else {\r\n            // Store the username of the logged in user\r\n            this.setState({\r\n                username: this.props.location.state.username\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\"></div>\r\n\t\t\t    <div className=\"col-md-10 content-col\">\r\n                    <section>\r\n                        <div className=\"container-fluid\">\r\n                            <h1>Demo video</h1>\r\n                            <br />\r\n                            <a id=\"sample-video\" href=\"#video-content\" data-toggle=\"collapse\">UniSA Sample Video</a>\r\n                            <div className=\"collapse\" id=\"video-content\">\r\n                                <br />\r\n                                <video controls name=\"media\">\r\n                                    <source src=\"http://d2uajlq4cxu81a.cloudfront.net/\" type=\"video/mp4\" />\r\n                                </video>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { Component, Fragment } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/auth/Login';\r\nimport SignUp from './components/auth/SignUp';\r\nimport Welcome from './components/Welcome';\r\nimport Home from './components/Home';\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tloggedInUser: \"\",\r\n\t\t\tisLoggedIn: false,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (window.location.href.includes(\"/home\")) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoggedIn: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tlogin = (username) => {\r\n\t\tthis.setState({\r\n\t\t\tloggedInUser: username, \r\n\t\t\tisLoggedIn: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<Navbar isLoggedIn={this.state.isLoggedIn} />\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/\" render={(props) => (\r\n    \t\t\t\t\t\t\t\t\t<Login {...props} login={this.login} />\r\n  \t\t\t\t\t\t\t)} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/login\" render={(props) => (\r\n    \t\t\t\t\t\t\t\t\t<Login {...props} login={this.login} />\r\n  \t\t\t\t\t\t\t)} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/signup\" component={SignUp} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={Welcome} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/home\" component={Home} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t  </Router>\r\n\t\t\t</div>\r\n\t\t  );\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Amplify from 'aws-amplify';\r\nimport config from './config';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nAmplify.configure({\r\n\tAuth: {\r\n\t\tmandatorySignId: true,\r\n\t\tregion: config.cognito.REGION,\r\n\t\tuserPoolId: config.cognito.USER_POOL_ID,\r\n\t\tuserPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n\t}\r\n})\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n    \t<App />\r\n  \t</React.StrictMode>,\r\n  \tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}